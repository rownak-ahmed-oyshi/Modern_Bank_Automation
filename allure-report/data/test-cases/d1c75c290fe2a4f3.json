{"uid":"d1c75c290fe2a4f3","name":"test_tc_tb_man_05[manager_test_case0]","fullName":"tests.test_TC_TB_MAN_05#test_tc_tb_man_05","historyId":"db862867a54adca650a9d315d8a7a20a","time":{"start":1755458312536,"stop":1755458313369,"duration":833},"status":"failed","statusMessage":"Failed: Manager Email Error Validation message for SQL injection did not match expected.","statusTrace":"browser_config = (<selenium.webdriver.firefox.webdriver.WebDriver (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>, <selenium.webdriver.support.wait.WebDriverWait (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>)\nmanager_test_case = {'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\", 'manager_email': \"' DROP TABLE users; --\", 'manager_full_name': 'John Doe', 'manager_password': '123456'}\n\n    @pytest.mark.parametrize(\n        \"manager_test_case\",\n        [get_test_case(\"manager_test_data.json\", \"invalid_manager\", 2)]  # index 2 → Rownak Ahmed Oyshi\n    ) #connecting data loader\n    \n    def test_tc_tb_man_05(browser_config,manager_test_case):\n        logging.info(\"TC_TB_MAN_05 Started..\")\n        driver, wait = browser_config\n    \n        # Create object for Manager register page class\n        manager_register_page = ManagerRegisterPage(driver,wait)\n    \n        try:\n            manager_register_page.click_register_as_manager_button()\n            logging.info(\"Click on Register as Manager successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Register as Manager' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Register as Manager Button !!!\")\n    \n        # Enter Manager Full name field\n        try:\n            manager_register_page.enter_manager_full_name(manager_test_case[\"manager_full_name\"])\n            logging.info(\"Manager Full Name entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Full Name Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Full Name Field !!!\")\n    \n        # Enter Manager Email Address field\n        try:\n            manager_register_page.enter_manager_email(manager_test_case[\"manager_email\"])\n            logging.info(\"Manager Email Address entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Email Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Email Field !!!\")\n    \n        # Enter Manager Password Field\n        try:\n            manager_register_page.enter_manager_password(manager_test_case[\"manager_password\"])\n            logging.info(\"Manager Password Enter successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Password Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Password Field !!!\")\n    \n        # Click on Register Button\n        try:\n            manager_register_page.click_manager_register_button()\n            logging.info(\"Click on Register button successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element in Manager 'Register' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager 'Register' Button !!!\")\n    \n        # Grab validation message in for SQL injection in Email separately\n        try:\n            validation_message = manager_register_page.get_validation_message(\"#managerEmailReg\")\n            expected_message = manager_test_case[\"expected_validation_message\"]\n    \n            if validation_message == expected_message:\n                logging.info(f\"Test Passed. Manager Email Error Validation message matched for SQL injection: '{validation_message}'\")\n            else:\n                logging.info(f\"Test Failed. Expected: '{expected_message}', Actual: '{validation_message}'\")\n                capture_full_page_screenshot(driver, \"BUG_TC_TB_MAN_05\")\n>               pytest.fail(\"Manager Email Error Validation message for SQL injection did not match expected.\")\nE               Failed: Manager Email Error Validation message for SQL injection did not match expected.\n\ntests\\test_TC_TB_MAN_05.py:75: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser_config","time":{"start":1755458300828,"stop":1755458312523,"duration":11695},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"Failed: Manager Email Error Validation message for SQL injection did not match expected.","statusTrace":"browser_config = (<selenium.webdriver.firefox.webdriver.WebDriver (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>, <selenium.webdriver.support.wait.WebDriverWait (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>)\nmanager_test_case = {'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\", 'manager_email': \"' DROP TABLE users; --\", 'manager_full_name': 'John Doe', 'manager_password': '123456'}\n\n    @pytest.mark.parametrize(\n        \"manager_test_case\",\n        [get_test_case(\"manager_test_data.json\", \"invalid_manager\", 2)]  # index 2 → Rownak Ahmed Oyshi\n    ) #connecting data loader\n    \n    def test_tc_tb_man_05(browser_config,manager_test_case):\n        logging.info(\"TC_TB_MAN_05 Started..\")\n        driver, wait = browser_config\n    \n        # Create object for Manager register page class\n        manager_register_page = ManagerRegisterPage(driver,wait)\n    \n        try:\n            manager_register_page.click_register_as_manager_button()\n            logging.info(\"Click on Register as Manager successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Register as Manager' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Register as Manager Button !!!\")\n    \n        # Enter Manager Full name field\n        try:\n            manager_register_page.enter_manager_full_name(manager_test_case[\"manager_full_name\"])\n            logging.info(\"Manager Full Name entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Full Name Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Full Name Field !!!\")\n    \n        # Enter Manager Email Address field\n        try:\n            manager_register_page.enter_manager_email(manager_test_case[\"manager_email\"])\n            logging.info(\"Manager Email Address entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Email Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Email Field !!!\")\n    \n        # Enter Manager Password Field\n        try:\n            manager_register_page.enter_manager_password(manager_test_case[\"manager_password\"])\n            logging.info(\"Manager Password Enter successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Password Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Password Field !!!\")\n    \n        # Click on Register Button\n        try:\n            manager_register_page.click_manager_register_button()\n            logging.info(\"Click on Register button successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element in Manager 'Register' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager 'Register' Button !!!\")\n    \n        # Grab validation message in for SQL injection in Email separately\n        try:\n            validation_message = manager_register_page.get_validation_message(\"#managerEmailReg\")\n            expected_message = manager_test_case[\"expected_validation_message\"]\n    \n            if validation_message == expected_message:\n                logging.info(f\"Test Passed. Manager Email Error Validation message matched for SQL injection: '{validation_message}'\")\n            else:\n                logging.info(f\"Test Failed. Expected: '{expected_message}', Actual: '{validation_message}'\")\n                capture_full_page_screenshot(driver, \"BUG_TC_TB_MAN_05\")\n>               pytest.fail(\"Manager Email Error Validation message for SQL injection did not match expected.\")\nE               Failed: Manager Email Error Validation message for SQL injection did not match expected.\n\ntests\\test_TC_TB_MAN_05.py:75: Failed","steps":[],"attachments":[{"uid":"b94ff1e388db239d","name":"log","source":"b94ff1e388db239d.txt","type":"text/plain","size":1152}],"parameters":[],"hasContent":true,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":1},"afterStages":[{"name":"browser_config::0","time":{"start":1755458313379,"stop":1755458317493,"duration":4114},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_TC_TB_MAN_05"},{"name":"host","value":"DESKTOP-6EVDAM2"},{"name":"thread","value":"6680-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_TC_TB_MAN_05"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"manager_test_case","value":"{'manager_full_name': 'John Doe', 'manager_email': \"' DROP TABLE users; --\", 'manager_password': '123456', 'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\"}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"d1c75c290fe2a4f3.json","parameterValues":["{'manager_full_name': 'John Doe', 'manager_email': \"' DROP TABLE users; --\", 'manager_password': '123456', 'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\"}"]}