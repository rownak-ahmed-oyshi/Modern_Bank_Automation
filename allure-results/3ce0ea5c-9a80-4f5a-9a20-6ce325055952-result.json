{"name": "test_tc_tb_cust_05[customer_test_case0]", "status": "failed", "statusDetails": {"message": "Failed: Initial Deposit Validation message did not match expected.", "trace": "browser_config = (<selenium.webdriver.firefox.webdriver.WebDriver (session=\"9194265f-a1d8-497b-8c51-0dd9c845d72e\")>, <selenium.webdriver.support.wait.WebDriverWait (session=\"9194265f-a1d8-497b-8c51-0dd9c845d72e\")>)\ncustomer_test_case = {'customer_email': 'johndoe@gmail.com', 'customer_full_name': 'John Doe', 'customer_password': '123456', 'expected_validation_message': 'Value must be greater than or equal to 10.', ...}\n\n    @pytest.mark.parametrize(\n        \"customer_test_case\",\n        [get_test_case(\"customer_test_data.json\", \"invalid_customers\", 2)]  # index 2 â†’ John Doe\n    ) #connecting data loader\n    \n    \n    def test_tc_tb_cust_05(browser_config,customer_test_case):\n        logging.info(\"TC_TB_CUST_05 Started..\")\n        driver, wait = browser_config\n    \n        # Create object for customer register page class\n        customer_register_page = CustomerRegisterPage(driver,wait)\n    \n        try:\n            customer_register_page.click_open_your_account_button()\n            logging.info(\"Click on Open Your Account Button successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Open Your Account' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Open Your Account Button !!!\")\n    \n        # Enter Customer Full name field\n        try:\n            customer_register_page.enter_customer_full_name(customer_test_case[\"customer_full_name\"])\n            logging.info(\"Customer Full Name entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Customer Full Name Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Customer Full Name Field !!!\")\n    \n        # Enter Customer Email Address field\n        try:\n            customer_register_page.enter_customer_email(customer_test_case[\"customer_email\"])\n            logging.info(\"Customer Email Address entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Customer Email Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Customer Email Field !!!\")\n    \n        # Enter Customer Password Field\n        try:\n            customer_register_page.enter_customer_password(customer_test_case[\"customer_password\"])\n            logging.info(\"Customer Password Enter successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Customer Password Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Customer Password Field !!!\")\n    \n        # Enter Customer Initial Deposit Field\n        try:\n            customer_register_page.enter_initial_deposit(customer_test_case[\"initial_deposit\"])\n            logging.info(\"Customer Initial Deposit Entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Customer Initial Deposit ' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Customer Initial Deposit Field !!!\")\n    \n        # Click on Register Button\n        try:\n            customer_register_page.click_register_button()\n            logging.info(\"Click on Register button successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element in Customer 'Register' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Customer 'Register' Button !!!\")\n    \n        # Grab validation message in Initial Deposit separately\n        try:\n            validation_message = customer_register_page.get_validation_message(\"#initialDepositReg\")\n            expected_message = customer_test_case[\"expected_validation_message\"]\n    \n            if validation_message == expected_message:\n                logging.info(f\"Test Passed. Initial Deposit Validation message matched: '{validation_message}'\")\n            else:\n                logging.info(f\"Test Failed. Expected: '{expected_message}', Actual: '{validation_message}'\")\n                capture_full_page_screenshot(driver, \"BUG_TC_TB_CUST_04\")\n>               pytest.fail(\"Initial Deposit Validation message did not match expected.\")\nE               Failed: Initial Deposit Validation message did not match expected.\n\ntests\\test_TC_TB_CUST_05.py:85: Failed"}, "attachments": [{"name": "log", "source": "aa85416c-2303-4b39-b90e-36e609f58c6b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "customer_test_case", "value": "{'customer_full_name': 'John Doe', 'customer_email': 'johndoe@gmail.com', 'customer_password': '123456', 'initial_deposit': '9', 'expected_validation_message': 'Value must be greater than or equal to 10.'}"}], "start": 1755458232265, "stop": 1755458233130, "uuid": "a21d16f6-c0e6-4d81-b1c5-1e690edb648d", "historyId": "4dba0caf79390da98e32e00c8ebc1e60", "testCaseId": "b8055e9a2a99407639d4612e04a3eb7b", "fullName": "tests.test_TC_TB_CUST_05#test_tc_tb_cust_05", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_TC_TB_CUST_05"}, {"name": "host", "value": "DESKTOP-6EVDAM2"}, {"name": "thread", "value": "6680-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_TC_TB_CUST_05"}], "titlePath": ["tests", "test_TC_TB_CUST_05.py"]}