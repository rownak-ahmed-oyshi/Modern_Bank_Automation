{"name": "test_tc_tb_man_05[manager_test_case0]", "status": "failed", "statusDetails": {"message": "Failed: Manager Email Error Validation message for SQL injection did not match expected.", "trace": "browser_config = (<selenium.webdriver.firefox.webdriver.WebDriver (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>, <selenium.webdriver.support.wait.WebDriverWait (session=\"7993f933-5e73-4777-b67c-a508b003b05c\")>)\nmanager_test_case = {'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\", 'manager_email': \"' DROP TABLE users; --\", 'manager_full_name': 'John Doe', 'manager_password': '123456'}\n\n    @pytest.mark.parametrize(\n        \"manager_test_case\",\n        [get_test_case(\"manager_test_data.json\", \"invalid_manager\", 2)]  # index 2 â†’ Rownak Ahmed Oyshi\n    ) #connecting data loader\n    \n    def test_tc_tb_man_05(browser_config,manager_test_case):\n        logging.info(\"TC_TB_MAN_05 Started..\")\n        driver, wait = browser_config\n    \n        # Create object for Manager register page class\n        manager_register_page = ManagerRegisterPage(driver,wait)\n    \n        try:\n            manager_register_page.click_register_as_manager_button()\n            logging.info(\"Click on Register as Manager successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Register as Manager' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Register as Manager Button !!!\")\n    \n        # Enter Manager Full name field\n        try:\n            manager_register_page.enter_manager_full_name(manager_test_case[\"manager_full_name\"])\n            logging.info(\"Manager Full Name entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Full Name Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Full Name Field !!!\")\n    \n        # Enter Manager Email Address field\n        try:\n            manager_register_page.enter_manager_email(manager_test_case[\"manager_email\"])\n            logging.info(\"Manager Email Address entered successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Email Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Email Field !!!\")\n    \n        # Enter Manager Password Field\n        try:\n            manager_register_page.enter_manager_password(manager_test_case[\"manager_password\"])\n            logging.info(\"Manager Password Enter successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element 'Manager Password Field' not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager Password Field !!!\")\n    \n        # Click on Register Button\n        try:\n            manager_register_page.click_manager_register_button()\n            logging.info(\"Click on Register button successfully.\")\n    \n        except Exception as e:\n            logging.info(\"Element in Manager 'Register' button not found with Explicit wait.\")\n            pytest.fail(\"Test Failed. Bug found for Manager 'Register' Button !!!\")\n    \n        # Grab validation message in for SQL injection in Email separately\n        try:\n            validation_message = manager_register_page.get_validation_message(\"#managerEmailReg\")\n            expected_message = manager_test_case[\"expected_validation_message\"]\n    \n            if validation_message == expected_message:\n                logging.info(f\"Test Passed. Manager Email Error Validation message matched for SQL injection: '{validation_message}'\")\n            else:\n                logging.info(f\"Test Failed. Expected: '{expected_message}', Actual: '{validation_message}'\")\n                capture_full_page_screenshot(driver, \"BUG_TC_TB_MAN_05\")\n>               pytest.fail(\"Manager Email Error Validation message for SQL injection did not match expected.\")\nE               Failed: Manager Email Error Validation message for SQL injection did not match expected.\n\ntests\\test_TC_TB_MAN_05.py:75: Failed"}, "attachments": [{"name": "log", "source": "1598c3d0-483c-4e0b-9e2f-ab2511c264c6-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "manager_test_case", "value": "{'manager_full_name': 'John Doe', 'manager_email': \"' DROP TABLE users; --\", 'manager_password': '123456', 'expected_validation_message': \"Please include an '@' in the email address. '' DROP TABLE users; --' is missing an '@'.\"}"}], "start": 1755458312536, "stop": 1755458313369, "uuid": "ac79d0a6-5199-4bab-bd71-1572f145dc1b", "historyId": "db862867a54adca650a9d315d8a7a20a", "testCaseId": "f2f3374cc26d463444786f9e712c3d12", "fullName": "tests.test_TC_TB_MAN_05#test_tc_tb_man_05", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_TC_TB_MAN_05"}, {"name": "host", "value": "DESKTOP-6EVDAM2"}, {"name": "thread", "value": "6680-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_TC_TB_MAN_05"}], "titlePath": ["tests", "test_TC_TB_MAN_05.py"]}